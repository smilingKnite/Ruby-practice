# arr = ["I", "code", "therefore", "I", "am"]
# for i in 0...arr.count
#   puts arr[i]
# end
##########################################################################################################
# 3.times { puts "WOW" }
##########################################################################################################
# puts 24.class
##########################################################################################################
# puts true.class
##########################################################################################################
# puts nil.class 
##########################################################################################################
# puts "Tyler Mondragon".reverse
# puts "Is this awesome or what?".upcase
# puts 23.odd?
##########################################################################################################
# count = 0

# result = 200
# for i in 0...result
    
#     if i%3 == 0
#         puts 'thrrrrrrrrrrreeeeeee'.upcase
#         count = count+1
#     end
#     if i%2 == 0
#         puts 'twice'.upcase
        
#     end
#     puts i
    
# end

# BEGIN {
#     puts "This is the begining of this crap"
#     puts " "
# }

# END {
#     puts " "
#     puts "This is the end of this crap"
#     # puts count 
# }
##########################################################################################################
# first_name = "Tyler"
# last_name ="Mondragon"

# puts "First name is %s and last name is %s" % [first_name, last_name]

# puts "First name is #{first_name} and last name is #{last_name}"

# %s for string
# %d for decimal
# %f for float

##########################################################################################################

# z = 50
# puts "Value of z is %d" % z # OR [z]
# \" for extra quote 
# puts "\t\tI am\n 5'8\" tall"

# x = puts "hello world!".length
# puts x
##########################################################################################################
# x = "I like turtles and cake"
# a = "and"
# puts"this includes the word '%s'" % a if x.include? a
##########################################################################################################
# x = "john, alex, michael, jake, albany"

# puts x.split(',').to_s
# puts x.split(',')
##########################################################################################################
# y = ""
# puts "Y is empty" if y.empty? 
##########################################################################################################
# x = "murder"
# x = 4
# puts x.split("").reverse
##########################################################################################################
# if x>2
#     puts "x is greater than two"
#     puts " "
# elsif x<2 and x>0
#     puts "x is around 1"
# else
#     puts "I can't guess the number"
# end
##########################################################################################################
# puts "X is not 2" if x != 2
# puts "X is 2" if x == 2
##########################################################################################################
# x =2
# puts "X is not 2" unless x==2
##########################################################################################################
# age = 15

# case age
# when 0..2
#     puts "baby"
# when 3..6
#     puts "little child"
# when 7..12
#     puts "child"
# when 13..18
#     puts "youth"
# else
#     puts "adult"
# end
# if age >= 21
#     puts "Welcome to the party"
# elsif age > 13 && age < 21
#     puts "You can't come in but that wont stop you, will it?" 
# end
# if !(age < 21)
#     puts "Welcome to the party"
# elsif age > 13 && age < 21
#     puts "You can't come in but that wont stop you, will it?" 
# end
# unless age < 21
#     puts "Welcome to the party"
# else age > 13 && age < 21
#     puts " "
#     puts "You can't come in but that wont stop you, will it?"
#     puts " " 
# end
##########################################################################################################
# if ""
#   puts "I am positive"
# end
# if 0
#   puts "I am positive"
# end

# unless nil
#   puts "I am negative"
# end
# unless false
#   puts "I am negative"
# end
##########################################################################################################
# puts "I am positive" if "hello"
# puts "I am positive" if 24
# puts "I am negative" unless nil
# puts "I am negative" unless false
##########################################################################################################
# $i = 0 
# $num = 5
# begin 
#     puts "Inside the loop i = #{$i}"
#     $i += 1

#     puts "$i is not 3" unless $i == 3

# end while $i < $num
##########################################################################################################
# for i in 0..5
#     puts "Value of i is #{i}"
#     puts "I is now 3" if i ==3
# end
##########################################################################################################
# i = 0
# num = 5
# while i < num do
#    puts "Inside the loop i = #{i}"
#    i +=1
# end
##########################################################################################################
# i = 0
# num = 5
# while i < num do
#   puts "Inside the loop i = #{i}"
#   i += 1  
#   break if i == 2  
# end
##########################################################################################################
# for i in 0..5 
#   puts "Value of local variable is #{i}" 
#   break if i == 2
# end
#########################################################################################################
# for i in 0..5 
#   next if i == 2
#   puts "Value of local variable is #{i}"   
# end
#########################################################################################################
# def hello_world
#   puts "hello world"
# end
# hello_world
#########################################################################################################
# def say_hello name1, name2
#   puts "hello, #{name1} and #{name2}"
# end
# say_hello "oscar", "eduardo" # => "hello, oscar and eduardo"
#########################################################################################################
# def say_hello(name1, name2)
#   puts "hello, #{name1} and #{name2}"
# end
# say_hello("oscar", "eduardo") # => "hello, oscar and eduardo"
#########################################################################################################
# def say_hello name1="oscar", name2="shane"
#   "hello, #{name1} and #{name2}"
# end
# puts say_hello "oscar", "eduardo"   # => "hello, oscar and eduardo"
#########################################################################################################
# def say_hello name1, name2
#   if name1.empty? or name2.empty?
#     return "Who are you?!"
#   end
#   # Doesn't reach the last line because we used return
#   "hello, #{name1} and #{name2}"
# end
# puts say_hello "", ""
#########################################################################################################
# puts "Ruby !" *2
#########################################################################################################
# puts "Chunky" << "Bacon"
#########################################################################################################
# puts "matz".length
#########################################################################################################
# puts "hello" if 0 #-> prints
# puts "hello" if "" #-> prints
# puts "hello" if nil #-> doesnt print 
#########################################################################################################
# puts "hello" if false #-> doesnt print 
# puts "hello" if [] #-> prints
# puts "hello" if nil #-> doesnt print
#########################################################################################################s
# def guess_number guess
#     number = 25
#     if guess == number 
#         puts "you got it!".upcase
#     elsif guess > number
#         puts "guess was too high!".capitalize
#     else 
#         puts "guess was too low!".capitalize
#     end
# end
# guess_number 34
#########################################################################################################
# def fizzbuzz num
#     for i in 0..num
#         if i%3==0
#             puts "Fizz"
#         end
#         if i%2==0
#             puts "FizzBuzz"
#         end
#         puts i
#     end
# end
# fizzbuzz
#########################################################################################################
# a = ["matz", "coding", "jake", "saphauly", "keaton"]
# b = [1, 2, 3, 4, 5, 6, 9, 8, 9]
# c = ["coding", 9]
# # puts a[0]
# x =(a+b)-c
# puts x.to_s
#########################################################################################################
# a = ["matz", "coding", "jake", "saphauly", "keaton"]
# b = [1, 2, 3, 4, 5, 6, 9, 8, 9]
# c = ["coding", 9]
# # puts a[0]
# x =(a+b)-c
# puts x.shuffle.join('-')
#########################################################################################################
# a = ["matz", "coding", "jake", "saphauly", "keaton"]
# # a = %w{matz, coding, jake, saphauly, keaton} ^SAME AS THIS
# b = [1, 2, 3, 4, 5, 6, 9, 8, 9]
# c = ["coding", 9]
# # puts a[0]
# x =(a+b)-c
# x.delete("jake")
# puts x
#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################

#########################################################################################################































































